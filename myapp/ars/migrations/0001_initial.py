# Generated by Django 5.1.2 on 2024-10-16 15:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('assignment_id', models.AutoField(primary_key=True, serialize=False)),
                ('assignment_name', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('assignment_description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('attachment_id', models.AutoField(primary_key=True, serialize=False)),
                ('attachment_type', models.CharField(choices=[('document', 'Document'), ('image', 'Image'), ('video', 'Video'), ('other', 'Other')], max_length=50)),
                ('attachment_name', models.CharField(max_length=255)),
                ('iteration', models.PositiveIntegerField(default=1, editable=False)),
                ('date_of_submission', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('enr_no', models.CharField(max_length=20, unique=True)),
                ('whatsapp_no', models.CharField(blank=True, max_length=15)),
                ('profile_pic', models.ImageField(blank=True, upload_to='profile_pics/')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=10)),
                ('dob', models.DateField(blank=True, null=True)),
                ('branch', models.CharField(blank=True, max_length=100)),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ConnectionDetails',
            fields=[
                ('connection_id', models.AutoField(primary_key=True, serialize=False)),
                ('login_start', models.DateTimeField(auto_now_add=True)),
                ('login_end', models.DateTimeField(blank=True, null=True)),
                ('user_agent', models.CharField(max_length=255)),
                ('connection_ip', models.GenericIPAddressField()),
                ('device_name', models.CharField(max_length=255)),
                ('device_id', models.CharField(max_length=255, unique=True)),
                ('last_used', models.DateTimeField(auto_now=True)),
                ('user_id', models.ManyToManyField(related_name='connections', to='ars.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentSubtask',
            fields=[
                ('subtask_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('subtask_end_date', models.DateField()),
                ('subtask_status', models.BooleanField(default=False)),
                ('ass_to_subtask_FK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_subtasks', to='ars.assignment')),
                ('assign_subtask_reviewer_FK', models.ManyToManyField(related_name='assignment_subtasks_reviewer', to='ars.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.TextField()),
                ('attach_feed_FK', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='ars.attachment')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('org_id', models.AutoField(primary_key=True, serialize=False)),
                ('org_name', models.CharField(max_length=255)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_organizations', to='ars.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='OrgMember',
            fields=[
                ('member_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_reviewer', models.BooleanField(default=False)),
                ('is_reviewee', models.BooleanField(default=False)),
                ('org_id_FK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='ars.organization')),
                ('user', models.ManyToManyField(related_name='org_members', to='ars.customuser')),
            ],
        ),
        migrations.AddField(
            model_name='assignment',
            name='assign_reviewer_FK',
            field=models.ManyToManyField(blank=True, related_name='reviewed_assignments', to='ars.orgmember'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='is_assign_creator_FK',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creator_of_assignments', to='ars.orgmember'),
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('submission_id', models.AutoField(primary_key=True, serialize=False)),
                ('isCompleted', models.BooleanField(default=False)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('submission_status', models.CharField(choices=[('submitted', 'Submitted'), ('under_review', 'Under Review'), ('completed', 'Completed'), ('rejected', 'Rejected')], default='submitted', max_length=50)),
                ('reviewer_id_FK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewed_submissions', to='ars.customuser')),
                ('subtask_id_FK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='ars.assignmentsubtask')),
            ],
        ),
        migrations.AddField(
            model_name='attachment',
            name='submission_id_FK',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments_related', to='ars.submission'),
        ),
        migrations.AddField(
            model_name='assignmentsubtask',
            name='assign_subtask_status_FK',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='status_subtasks', to='ars.submission'),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.AutoField(primary_key=True, serialize=False)),
                ('team_name', models.CharField(max_length=255)),
                ('team_leader_FK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='led_teams', to='ars.orgmember')),
                ('team_leader_submission_FK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='led_teams', to='ars.submission')),
                ('team_members_FK', models.ManyToManyField(related_name='teams', to='ars.orgmember')),
            ],
        ),
        migrations.AddField(
            model_name='submission',
            name='team_leader_id_FK',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_lead_submissions', to='ars.team'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='assigned_teams_FK',
            field=models.ManyToManyField(related_name='assignments', to='ars.team'),
        ),
    ]
